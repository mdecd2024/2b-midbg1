<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>網際內容管理系統</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2024-05-08T09:27:38+08:00</updated><entry><title>About</title><link href="./about.html" rel="alternate"></link><published>2024-05-08T09:27:38+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>team1</name></author><id>tag:None,2024-05-08:./about.html</id><content type="html">&lt;h1&gt;cmsimde 內容管理系統&lt;/h1&gt;
&lt;p&gt;倉儲: &lt;a href="https://41136103.github.io/cd2024/"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;網站: &lt;a href="     https://41136103.github.io/cd2024/"&gt;https://mde.tw/cmsimde_site/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;簡報: &lt;a href="https://41136103.github.io/cd2024/reveal"&gt;https://mde.tw/cmsimde_site/reveal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;網誌: &lt;a href="https://41136103.github.io/cd2024/blog"&gt;https://mde.tw/cmsimde_site/blog&lt;/a&gt;&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>2024 Spring 課程 41123218</title><link href="./2024-Spring-w9-blog-tutorial%2041123218.html" rel="alternate"></link><published>2024-04-18T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>cheng</name></author><id>tag:None,2024-04-18:./2024-Spring-w9-blog-tutorial 41123218.html</id><summary type="html">&lt;p&gt;2024 Spring 第八周網誌撰寫.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第八周網誌撰寫.&lt;/p&gt;


&lt;p&gt;期中自評&lt;/p&gt;</content><category term="w9 41123218"></category><category term="網誌編寫 41123218"></category></entry><entry><title>2024 Spring 課程 41136103</title><link href="./w8.html" rel="alternate"></link><published>2024-04-11T15:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-04-11:./w8.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程 w8網誌&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程 w8網誌&lt;/p&gt;


&lt;h1&gt;W8課程網誌心得&lt;/h1&gt;
&lt;h2&gt;課程主旨&lt;/h2&gt;
&lt;p&gt;小組討論，課成自評。&lt;/p&gt;</content><category term="w8 41136103"></category><category term="網誌編寫 41136103"></category></entry><entry><title>411232082024 Spring 課程</title><link href="./41123208-2024-Spring-w8-blog-tutorial.html" rel="alternate"></link><published>2024-04-11T14:35:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>41123208-朱家成</name></author><id>tag:None,2024-04-11:./41123208-2024-Spring-w8-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w8&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w8&lt;/p&gt;


&lt;h1&gt;第八周&lt;/h1&gt;
&lt;h2&gt;請各組自行搜尋前面已經發布的教學影片&lt;/h2&gt;
&lt;p&gt;在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上
從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排
並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點&lt;/p&gt;
&lt;p&gt;第五部
https://youtu.be/g_KAxSXEnys?si=HEt__SyvmxL8Tm9T&lt;/p&gt;
&lt;p&gt;逐字稿txt及mp4檔
https://drive.google.com/drive/folders/1h9yhNTHVoxv5Db3ByVNGODS4xm0B9ssQ?usp=drive_link&lt;/p&gt;</content><category term="41123208-w8"></category><category term="41123208-網誌編寫"></category></entry><entry><title>20240411 41123211</title><link href="./2024-Spring-w8-blog-41123211.html" rel="alternate"></link><published>2024-04-11T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-04-11:./2024-Spring-w8-blog-41123211.html</id><summary type="html">&lt;p&gt;本周進行Latex翻譯文章統整
以及製作期中報告影片&lt;/p&gt;
</summary><content type="html">&lt;p&gt;本周進行Latex翻譯文章統整
以及製作期中報告影片&lt;/p&gt;


&lt;h1&gt;Latex翻譯文章統整及製作期中報告影片&lt;/h1&gt;
&lt;p&gt;這周我進行了組員們翻譯好的文章之統整，現在還在持續修正，常有格式不合，或是檔名或內容有問題的情況發生，希望能趕緊統整完畢並繳交。&lt;/p&gt;
&lt;p&gt;這周還進行了期中影片的製作，雖然不知道形式有沒有符合老師要的，但我就盡力將我期中前所做的工作報告在影片內，希望有符合老師的期待。&lt;/p&gt;</content><category term="w8 41123211"></category><category term="網誌編寫 41123211"></category></entry><entry><title>2024 Spring 課程 41123218</title><link href="./2024-Spring-w8-blog-tutorial%2041123218.html" rel="alternate"></link><published>2024-04-11T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>cheng</name></author><id>tag:None,2024-04-11:./2024-Spring-w8-blog-tutorial 41123218.html</id><summary type="html">&lt;p&gt;2024 Spring 第八周網誌撰寫.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第八周網誌撰寫.&lt;/p&gt;


&lt;h1&gt;統合&lt;/h1&gt;</content><category term="w8 41123218"></category><category term="網誌編寫 41123218"></category></entry><entry><title>2024 協同產品設計實習第7週心得-41123204</title><link href="./2024-w7-blog-tutorial-41123204.html" rel="alternate"></link><published>2024-04-11T00:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>TING</name></author><id>tag:None,2024-04-11:./2024-w7-blog-tutorial-41123204.html</id><summary type="html">&lt;p&gt;2024 協同產品設計實習課程第6週心得.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 協同產品設計實習課程第6週心得.&lt;/p&gt;


&lt;p&gt;這週使用了&lt;a href="https://reccloud.com/tw/"&gt;RecCloud&lt;/a&gt;上字幕&lt;/p&gt;
&lt;p&gt;並學會了幫組員更新在分組倉儲中的子模組
1.git submodule update --init
2.cd 需要更新的子模組名稱
3.git pull origin main
4.git status
5.git add .
6.git commit -m"update submodule"
7.git push&lt;/p&gt;</content><category term="w7-41123204"></category><category term="網誌編寫-41123204"></category></entry><entry><title>影片嵌入字幕</title><link href="./41123216-w8.html" rel="alternate"></link><published>2024-04-10T20:37:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>Bee</name></author><id>tag:None,2024-04-10:./41123216-w8.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;將字幕嵌入影片&lt;/h1&gt;
&lt;p&gt;我負責第13及14部影片的部分，以下是連結及總結&lt;/p&gt;
&lt;p&gt;&lt;a href="https://drive.google.com/drive/folders/1eCHJ_AppDmFq2bpmvj_lTeWYR8lXBvL-?usp=sharing"&gt;第13部雲端連結&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;youtube連結:&lt;a href="https://youtu.be/UMV1rVbFA2o"&gt;https://youtu.be/UMV1rVbFA2o&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此影片主要是在說明設定倉儲時使用gitpod與個人token取得分組倉儲改版權限的過程，有以下個幾重點:&lt;/p&gt;
&lt;p&gt;1.使用token而不是ssh來啟動gitpod。將token存在本地以供使用，且這個token只是暫時性的，因此其他人不應該能夠看到它。\
2.使用vi編輯gitpod的配置檔案。進入編輯模式，進行上下左右移動、刪除文字以及插入token等操作。\
3.token不需要設定太久，影片中只設定7天的有效期。在存儲token後及時刪除以避免安全風險。\
4.gitpod啟動後有一定的時間限制，應在使用完畢後關閉計時。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://drive.google.com/drive/folders/1dVxBAkcll-5VJgXRM7rt3taT4C5shh5s?usp=sharing"&gt;第14部雲端連結&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;youtube連結:&lt;a href="https://youtu.be/qxS-6c3NyPw"&gt;https://youtu.be/qxS-6c3NyPw&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此影片主要內容為，分組整理影片、了解影片內容、撰寫影片摘要和網誌、以及資料操作注意事項。要求團隊成員對影片進行深入理解，並在整合過程中保持組織性和溝通。以下幾個重點:&lt;/p&gt;
&lt;p&gt;1.將影片依照分組架構整理，並在觀看時提出問題的地方，以便進行討論和解決。同時，需要在影片上加入字幕，並嵌入到分組中。\
2.了解每週影片的內容並釋出逐字稿(txt)。影片的重要內容需要整合並重複強調。\
3.在嵌入的影片下方以條列式方式概述影片的教學重點，並在期中自評之前完成。\
4.每個組員每週至少寫一篇網誌，並將其整合到分組中。需要注意網誌名稱的前綴以避免蓋掉其他成員的文章。&lt;/p&gt;</content><category term="41123216-w8"></category><category term="41123216網誌編寫"></category></entry><entry><title>41123208-2024 Spring 課程</title><link href="./41123208-2024-Spring-w7-blog-tutorial.html" rel="alternate"></link><published>2024-04-04T16:35:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>41123208-朱家成</name></author><id>tag:None,2024-04-04:./41123208-2024-Spring-w7-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w7&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w7&lt;/p&gt;


&lt;h1&gt;第七周&lt;/h1&gt;
&lt;h2&gt;清明連假&lt;/h2&gt;
&lt;p&gt;由於本次上課卡到清明連假，所以沒有上課&lt;/p&gt;</content><category term="41123208-w7"></category><category term="41123208-網誌編寫"></category></entry><entry><title>41123216-W7</title><link href="./41123216-w7.html" rel="alternate"></link><published>2024-04-04T08:12:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>bee</name></author><id>tag:None,2024-04-04:./41123216-w7.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;待編輯&lt;/h1&gt;</content><category term="41123216-w7"></category><category term="41123216網誌編寫"></category></entry><entry><title>2024 Spring 課程 41136103</title><link href="./w6.html" rel="alternate"></link><published>2024-03-28T15:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-28:./w6.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程 w6網誌&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程 w6網誌&lt;/p&gt;


&lt;h1&gt;W6課程網誌心得&lt;/h1&gt;
&lt;h2&gt;課程主旨&lt;/h2&gt;
&lt;p&gt;協同產品設計實習的第六週, 說明協同 NX 零組件繪圖以及 CoppeliaSim 場景模擬相關檔案格式。&lt;/p&gt;</content><category term="w6 41136103"></category><category term="網誌編寫 41136103"></category></entry><entry><title>41123216-W6</title><link href="./41123216-w6.html" rel="alternate"></link><published>2024-03-28T13:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>Bee</name></author><id>tag:None,2024-03-28:./41123216-w6.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;各組討論&lt;/h1&gt;
&lt;p&gt;依分配事項進行分工，並在現場提出問題或詢問導師。
決定各組員負責嵌入哪一部影片的字幕。
持續編譯論文。&lt;/p&gt;</content><category term="41123216-w6"></category><category term="41123216網誌編寫"></category></entry><entry><title>41123208-2024 Spring 課程</title><link href="./41123208-2024-Spring-w6-blog-tutorial.html" rel="alternate"></link><published>2024-03-28T12:53:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>41123208-朱家成</name></author><id>tag:None,2024-03-28:./41123208-2024-Spring-w6-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w6&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w6&lt;/p&gt;


&lt;h1&gt;第六周&lt;/h1&gt;
&lt;p&gt;各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作.
個人負責部分https://www.overleaf.com/8972652498gdnfshgzmtcy#d5601d
文字連結
https://drive.google.com/drive/folders/1jSGiQ0W4yv1Oxjddj-OjuyH9j76AMD-y?usp=drive_link&lt;/p&gt;</content><category term="41123208-w6"></category><category term="41123208-網誌編寫"></category></entry><entry><title>20240328 41123211</title><link href="./2024-Spring-w6-blog-41123211.html" rel="alternate"></link><published>2024-03-28T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-28:./2024-Spring-w6-blog-41123211.html</id><summary type="html">&lt;p&gt;本周將進行NX及CoppeliaSim&lt;/p&gt;
</summary><content type="html">&lt;p&gt;本周將進行NX及CoppeliaSim&lt;/p&gt;


&lt;h1&gt;本周進行NX及Coppeliasim的安裝及熟悉&lt;/h1&gt;
&lt;p&gt;本周在我的筆電上安裝了nx以及coppeliasim，並實際進入軟體實作，複習一下上學期所操作的內容。&lt;/p&gt;
&lt;p&gt;基本上和上學期沒有太大差別，之後就只要將老師的題目再實際繪出並利用coppeliasim模擬就行了。&lt;/p&gt;</content><category term="w6 41123211"></category><category term="網誌編寫 41123211"></category></entry><entry><title>2024 Spring 課程 41123218</title><link href="./2024-Spring-w7-blog-tutorial%2041123218.html" rel="alternate"></link><published>2024-03-28T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>cheng</name></author><id>tag:None,2024-03-28:./2024-Spring-w7-blog-tutorial 41123218.html</id><summary type="html">&lt;p&gt;2024 Spring 第六周網誌撰寫.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第六周網誌撰寫.&lt;/p&gt;


&lt;h1&gt;Github Actions 帶有子模組的 main.yml 設定&lt;/h1&gt;</content><category term="w6 41123218"></category><category term="網誌編寫 41123218"></category></entry><entry><title>2024 協同產品設計實習第6週心得-41123204</title><link href="./2024-w6-blog-tutorial-41123204.html" rel="alternate"></link><published>2024-03-28T00:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>TING</name></author><id>tag:None,2024-03-28:./2024-w6-blog-tutorial-41123204.html</id><summary type="html">&lt;p&gt;2024 協同產品設計實習課程第6週心得.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 協同產品設計實習課程第6週心得.&lt;/p&gt;


&lt;h1&gt;第六周心得&lt;/h1&gt;
&lt;p&gt;將&lt;a href="[https://webthesis.biblio.polito.it/16429/1/tesi.pdf]"&gt;ODOO 參考資料&lt;/a&gt;中的第32到42翻譯完成，並使用LaTeX語法進行編輯，並學會了新的語法&lt;/p&gt;
&lt;p&gt;\usepackage{makecell} %命令引入 makecell宏包&lt;/p&gt;
&lt;p&gt;\makecell[居中情況]{第一行內容\第二行內容\...} %這個指令能夠在表格內容太長，需要換行時使用，居中情況可鍵入[l]向左靠齊[c]居中對齊[r]向右靠齊&lt;/p&gt;</content><category term="w6-41123204"></category><category term="網誌編寫-41123204"></category></entry><entry><title>2024 Spring 課程 41136103</title><link href="./w5.html" rel="alternate"></link><published>2024-03-21T15:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-21:./w5.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程 w5網誌&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程 w5網誌&lt;/p&gt;


&lt;h1&gt;W5課程網誌心得&lt;/h1&gt;
&lt;h2&gt;課程主旨&lt;/h2&gt;
&lt;p&gt;協同產品設計實習的第五週, 教學內容為先前影片整理、分組網誌的統整與 NX 零組件繪圖.&lt;/p&gt;
&lt;h2&gt;學習成果&lt;/h2&gt;
&lt;p&gt;分組任務&lt;/p&gt;
&lt;p&gt;把教學影片分組整理和自評:  1.在教學影片上填上字幕, 另行傳到可以嵌入到各分組的網站上 2.從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排。&lt;/p&gt;</content><category term="w5 41136103"></category><category term="網誌編寫 41136103"></category></entry><entry><title>2024 Spring w5 課程 41123219</title><link href="./2024-Spring-w5-blog-tutorial%2041123219.html" rel="alternate"></link><published>2024-03-21T14:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>411123219</name></author><id>tag:None,2024-03-21:./2024-Spring-w5-blog-tutorial 41123219.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;latex翻譯了四節課還沒翻好&lt;/p&gt;</content><category term="w5 41123219"></category><category term="網誌編寫 41123219"></category></entry><entry><title>41123216-W5</title><link href="./41123216-w5.html" rel="alternate"></link><published>2024-03-21T13:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>Bee</name></author><id>tag:None,2024-03-21:./41123216-w5.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;編譯論文&lt;/h1&gt;
&lt;p&gt;利用&lt;a href="https://www.overleaf.com/project"&gt;Overleaf, Online LaTeX Editor&lt;/a&gt; 網站編譯&lt;a href="https://webthesis.biblio.polito.it/16429/1/tesi.pdf"&gt;https://webthesis.biblio.polito.it/16429/1/tesi.pdf&lt;/a&gt;內容&lt;/p&gt;
&lt;p&gt;並將個人分配部分交給組長整合至分組倉儲(&lt;a href="https://drive.google.com/drive/folders/1Gb6dSehC21UYexmW0k_doqVTmrQ43aR7?usp=drive_link"&gt;連結&lt;/a&gt;)&lt;/p&gt;</content><category term="41123216-w5"></category><category term="41123216網誌編寫"></category></entry><entry><title>41123208-2024 Spring 課程</title><link href="./41123208-2024-Spring-w5-blog-tutorial.html" rel="alternate"></link><published>2024-03-21T12:53:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>41123208-朱家成</name></author><id>tag:None,2024-03-21:./41123208-2024-Spring-w5-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w5&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w5&lt;/p&gt;


&lt;h1&gt;第五周&lt;/h1&gt;
&lt;p&gt;協同產品設計實習的第五週, 教學內容為先前影片整理、分組網誌的統整&lt;/p&gt;</content><category term="41123208-w5"></category><category term="41123208-網誌編寫"></category></entry><entry><title>20240321 41123211</title><link href="./2024-Spring-w5-blog-41123211.html" rel="alternate"></link><published>2024-03-21T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-21:./2024-Spring-w5-blog-41123211.html</id><summary type="html">&lt;p&gt;本周將OOTO PLM相關文章進行翻譯工作。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;本周將OOTO PLM相關文章進行翻譯工作。&lt;/p&gt;


&lt;h1&gt;本周進行了開學至今的課程統整，以及OODO PLM文章的翻譯工作。&lt;/h1&gt;
&lt;p&gt;我們組分配了大約1人10頁的工作，而我負責統整所有內容，這次的翻譯工作必須由latex的格式來製作，算是一個新的挑戰，之前從來沒有用過類似的方式進行報告的製作，不知道成效會如何。&lt;/p&gt;
&lt;p&gt;另外老師還指派了一項作業，就是要將開學到現在的所有影片加上字幕並進行重點摘要，這個作業感覺不太容易，是需要花一些時間和心力來製作的。&lt;/p&gt;</content><category term="w5 41123211"></category><category term="網誌編寫 41123211"></category></entry><entry><title>2024 Spring 課程 41123218</title><link href="./2024-Spring-w6-blog-tutorial%2041123218.html" rel="alternate"></link><published>2024-03-21T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>cheng</name></author><id>tag:None,2024-03-21:./2024-Spring-w6-blog-tutorial 41123218.html</id><summary type="html">&lt;p&gt;2024 Spring 第五周網誌撰寫.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第五周網誌撰寫.&lt;/p&gt;


&lt;h1&gt;教學影片分組整理並自評&lt;/h1&gt;</content><category term="w5 41123218"></category><category term="網誌編寫 41123218"></category></entry><entry><title>2024 協同產品設計實習第5週心得-41123204</title><link href="./2024-w5-blog-tutorial-41123204.html" rel="alternate"></link><published>2024-03-21T00:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>TING</name></author><id>tag:None,2024-03-21:./2024-w5-blog-tutorial-41123204.html</id><summary type="html">&lt;p&gt;2024 協同產品設計實習課程第5週心得.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 協同產品設計實習課程第5週心得.&lt;/p&gt;


&lt;h1&gt;第五週心得&lt;/h1&gt;
&lt;p&gt;學習LaTeX語法，在&lt;a href="https://www.overleaf.com/"&gt;overleaf&lt;/a&gt; 網站上進行編輯，以下為語法&lt;/p&gt;
&lt;p&gt;\documentclass[12pt,a4paper]{report} %紙張設定&lt;/p&gt;
&lt;p&gt;\usepackage{xeCJK}%中文字體模組&lt;/p&gt;
&lt;p&gt;\setCJKmainfont{TW-Kai} %設定中文字體&lt;/p&gt;
&lt;p&gt;\usepackage[top=3cm, bottom=2cm, left=3cm, right=3cm, a4paper]{geometry} %命令引入 geometry宏包，並通過選項設置了頁面的上、下、左、右邊距以及紙張大小。&lt;/p&gt;
&lt;p&gt;\usepackage{graphicx} %命令引入 graphicx宏包&lt;/p&gt;
&lt;p&gt;\usepackage{textcomp} %命令引入 textcomp宏包&lt;/p&gt;
&lt;p&gt;\hoffset=-5mm %調整左右邊界&lt;/p&gt;
&lt;p&gt;\voffset=-8mm %調整上下邊界&lt;/p&gt;
&lt;p&gt;\usepackage{amsmath} %命令引入 amsmath宏包&lt;/p&gt;
&lt;p&gt;\setlength{\parindent}{2em} %將段落的縮進設置為 2em&lt;/p&gt;
&lt;p&gt;\newfontfamily\sectionef{Times New Roman} %設置字體&lt;/p&gt;
&lt;p&gt;\begin{document} 
\end{document} %LaTeX 文檔的開始與結束&lt;/p&gt;
&lt;p&gt;\begin{centor} 
文字
\end{centor} %文字置中&lt;/p&gt;
&lt;p&gt;\newpage %下一頁&lt;/p&gt;
&lt;p&gt;\textbf{文字} %文字變粗&lt;/p&gt;
&lt;p&gt;\includegraphics[width=1\textwidth,height=0.5\textwidth]{圖片檔} %上傳圖片且width可改變寬度height可改變高度&lt;/p&gt;</content><category term="w5-41123204"></category><category term="網誌編寫-41123204"></category></entry><entry><title>41123208-2024 Spring 課程</title><link href="./41123208-2024-Spring-w4-blog-tutorial.html" rel="alternate"></link><published>2024-03-14T15:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>41123208-朱家成</name></author><id>tag:None,2024-03-14:./41123208-2024-Spring-w4-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w4&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w4&lt;/p&gt;


&lt;h1&gt;第四周&lt;/h1&gt;
&lt;p&gt;明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構&lt;/p&gt;</content><category term="41123208-w4"></category><category term="41123208-網誌編寫"></category></entry><entry><title>2024 Spring 課程 41136103</title><link href="./w4.html" rel="alternate"></link><published>2024-03-14T15:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-14:./w4.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程 w4網誌&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程 w4網誌&lt;/p&gt;


&lt;h1&gt;W4課程網誌心得&lt;/h1&gt;
&lt;h2&gt;課程主旨&lt;/h2&gt;
&lt;p&gt;協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用。&lt;/p&gt;
&lt;h2&gt;翻譯文章&lt;/h2&gt;
&lt;p&gt;翻譯老師給的論文。
本人翻譯頁數75-87
雲端連結:https://drive.google.com/file/d/1Y8t Q6sYAMnMSVIhMBNSwuI2AiJMt21RG/view?usp=sharing&lt;/p&gt;</content><category term="w4 41136103"></category><category term="網誌編寫 41136103"></category></entry><entry><title>2024 Spring w4 課程 41123219</title><link href="./2024-Spring-w4-blog-tutorial%2041123219.html" rel="alternate"></link><published>2024-03-14T14:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>411123219</name></author><id>tag:None,2024-03-14:./2024-Spring-w4-blog-tutorial 41123219.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;codespace改版及Git Branch 的應用&lt;/h1&gt;
&lt;p&gt;協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用.&lt;/p&gt;</content><category term="w4 41123219"></category><category term="網誌編寫 41123219"></category></entry><entry><title>41123216-W4</title><link href="./41123216-w4.html" rel="alternate"></link><published>2024-03-14T13:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>Bee</name></author><id>tag:None,2024-03-14:./41123216-w4.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;xelatex 編譯&lt;/h1&gt;
&lt;p&gt;在各自的個人課程倉儲放置所被交付編寫的  .txt (in LaTeX 格式), 然後整合至各組的分組倉儲, 由 xelatex 編譯出各週的分組報告 pdf 檔案.&lt;/p&gt;</content><category term="41123216-w4"></category><category term="41123216網誌編寫"></category></entry><entry><title>20240314 41123211</title><link href="./2024-Spring-w4-blog-41123211.html" rel="alternate"></link><published>2024-03-14T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-14:./2024-Spring-w4-blog-41123211.html</id><summary type="html">&lt;p&gt;本周學到了以blog的形式進行網誌更新。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;本周學到了以blog的形式進行網誌更新。&lt;/p&gt;


&lt;h1&gt;本周進行了blog的設置。&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;先執行下列指令&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;chmod&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gen_blog&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;再至markdown/pages/pages_1.md中修改倉儲、網站、簡報、網誌等資訊。&lt;/p&gt;
&lt;p&gt;在pages資料夾下新增.md檔即可進行網頁的編輯。&lt;/p&gt;</content><category term="w4 41123211"></category><category term="網誌編寫 41123211"></category></entry><entry><title>2024 Spring 課程 41123218</title><link href="./2024-Spring-w5-blog-tutorial%2041123218.html" rel="alternate"></link><published>2024-03-14T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>cheng</name></author><id>tag:None,2024-03-14:./2024-Spring-w5-blog-tutorial 41123218.html</id><summary type="html">&lt;p&gt;2024 Spring 第四周網誌撰寫.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第四周網誌撰寫.&lt;/p&gt;


&lt;h1&gt;Odoo 參考文章中英並列&lt;/h1&gt;</content><category term="w4 41123218"></category><category term="網誌編寫 41123218"></category></entry><entry><title>2024 協同產品設計實習4週心得-41123204</title><link href="./2024-w4-blog-tutorial-41123204.html" rel="alternate"></link><published>2024-03-14T00:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>TING</name></author><id>tag:None,2024-03-14:./2024-w4-blog-tutorial-41123204.html</id><summary type="html">&lt;p&gt;2024 協同產品設計實習課程第四週心得.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 協同產品設計實習課程第四週心得.&lt;/p&gt;


&lt;h1&gt;第四周心得&lt;/h1&gt;
&lt;p&gt;建出網站日誌&lt;/p&gt;</content><category term="w4-41123204"></category><category term="網誌編寫-41123204"></category></entry><entry><title>41123208-2024 Spring 課程</title><link href="./41123208-2024-Spring-w3-blog-tutorial.html" rel="alternate"></link><published>2024-03-07T15:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>41123208-朱家成</name></author><id>tag:None,2024-03-07:./41123208-2024-Spring-w3-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w3&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w3&lt;/p&gt;


&lt;h1&gt;第三周&lt;/h1&gt;
&lt;p&gt;建立各組組員分別的子模組&lt;/p&gt;</content><category term="41123208-w3"></category><category term="41123208-網誌編寫"></category></entry><entry><title>2024 Spring 課程 41136103</title><link href="./w3%2041136103.html" rel="alternate"></link><published>2024-03-07T15:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-07:./w3 41136103.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程 w3網誌&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習課程 w3網誌&lt;/p&gt;


&lt;h1&gt;W3課程網誌心得&lt;/h1&gt;
&lt;h2&gt;課程主旨&lt;/h2&gt;
&lt;p&gt;2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作.&lt;/p&gt;
&lt;h2&gt;學習成果&lt;/h2&gt;
&lt;p&gt;一.建立個人課程倉儲:&lt;/p&gt;
&lt;p&gt;登入 GitHub 帳戶後，進入https://github.com/mdecycu/cmsimde_site，可以用來建立我的個人課程倉庫。透過點擊右上角的 "Use this template" 按鈕，將這個範本運用到我的倉庫中，並將其命名為 "cd2024"。接著，我進入了倉庫的設定頁面，找到了 "Pages" 選項。在這裡，再將主分支設定為網站的根目錄，這樣一來，我的個人課程網站就能夠正常運行了。
完成這些步驟後，我的個人課程倉庫已經準備就緒！我就可以開始上傳課程資料，並透過這個網站與其他人分享你的知識了。&lt;/p&gt;
&lt;p&gt;二.將倉儲 import 至 Replit&lt;/p&gt;
&lt;p&gt;進入我的GitHub帳戶後，前往[https://github.com/mdecycu/cmsimde_site]。這是一個現成的範本，可以用來建立你的個人課程倉庫。
透過點擊右上角的 "Use this template" 按鈕，我使用了這個範本來建立新的倉庫。你將這個倉庫命名為 "cd2024"。接下來，你進入了倉庫的設定頁面，找到了 "Pages" 選項。在那裡，你將主分支 (main branch) 設置為網站的根目錄，這樣一來，你的個人課程網站就會自動顯示了。完成這些步驟後，我的個人課程倉庫設定完成！我就可以立即開始上傳課程內容，讓其他人能夠訪問和學習。&lt;/p&gt;
&lt;p&gt;三.建立網誌&lt;/p&gt;
&lt;p&gt;我們使用的網誌系統是 Pelican，而 markdown 目錄則是我們撰寫網誌範本的原始檔。新增內容後，透過指令 pelican markdown -o blog -s local_publishconf.py，將其轉換為網誌，並將轉換後的內容放置在 blog 目錄下。在設定網誌時，需要使用到幾個與 blog 相關的設定檔。首先是 pelicanconf.py，它可以讓我們更改網誌的名稱。然後是 publishconf.py，它用於增加靜態連結。在設定這些檔案時，需要根據自己的 GitHub 帳號進行相應的配置。&lt;/p&gt;</content><category term="41136103-w3"></category><category term="網誌編寫 41136103"></category></entry><entry><title>2024 Spring w3 課程 41123219</title><link href="./2024-Spring-w3-blog-tutorial%2041123219.html" rel="alternate"></link><published>2024-03-07T14:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>41123219</name></author><id>tag:None,2024-03-07:./2024-Spring-w3-blog-tutorial 41123219.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;列出期中分組倉儲與網站&lt;/h1&gt;
&lt;p&gt;2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作.&lt;/p&gt;</content><category term="w3 41123219"></category><category term="網誌編寫 41123219"></category></entry><entry><title>41123216-W3</title><link href="./41123216-w3.html" rel="alternate"></link><published>2024-03-07T13:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>Bee</name></author><id>tag:None,2024-03-07:./41123216-w3.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;將組員的個人倉儲設為分組倉儲子模組&lt;/h1&gt;
&lt;p&gt;指令:git submodule add 組員的個人倉儲網址 組員的學號
如:git submodule add https://github.com/S41123216/cd2024.git 41123216
如此一來 Github 帳號為 S41123216 的組員, 其個人倉儲就會設定為分組倉儲的子模組, 而且是以其學號命名此一子模組的目錄名稱. 
好處是: 各組員可以自行管理個人的課程倉儲與網站, 也就是位於其 Github 帳號下的 cd2024, 並且自行決定要整合到分組倉儲與網站的版本. 也能將自己在課程網站的資料, 直接用連結導入分組網站, 無需額外將資料搬進分組倉儲.&lt;/p&gt;</content><category term="41123216-w3"></category><category term="41123216網誌編寫"></category></entry><entry><title>20240307 41123211</title><link href="./2024-Spring-w3-blog-41123211.html" rel="alternate"></link><published>2024-03-07T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-07:./2024-Spring-w3-blog-41123211.html</id><summary type="html">&lt;p&gt;本周加入組員之子模組，並設置SSH。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;本周加入組員之子模組，並設置SSH。&lt;/p&gt;


&lt;h1&gt;加入組員子模組&lt;/h1&gt;
&lt;p&gt;本周以指令進行組員倉儲clone到團隊倉儲的操作，利用下列指令:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  git submodule add 組員之倉儲網址 組員學號
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;進行組員倉儲的cloning。&lt;/p&gt;
&lt;p&gt;本周也設置了團隊倉儲的ssh，此次所設置的Key是以replit為導向所建立的。&lt;/p&gt;
&lt;p&gt;以key-gen建立ssh的key，並將id_rsa進行copy，再以github建立key，再將config內的協定設置為SSH，再將所建立之config.txt及id_rsa下載下來，移至2021(Y)/tmp即可。&lt;/p&gt;</content><category term="w3 41123211"></category><category term="網誌編寫 41123211"></category></entry><entry><title>2024 Spring 課程 41123218</title><link href="./2024-Spring-w4-blog-tutorial%2041123218.html" rel="alternate"></link><published>2024-03-07T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>cheng</name></author><id>tag:None,2024-03-07:./2024-Spring-w4-blog-tutorial 41123218.html</id><summary type="html">&lt;p&gt;2024 Spring 第三周網誌撰寫.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第三周網誌撰寫.&lt;/p&gt;


&lt;h1&gt;列出期中分組倉儲與網站 期中協同分組報告&lt;/h1&gt;</content><category term="w3 41123218"></category><category term="網誌編寫 41123218"></category></entry><entry><title>2024 協同產品設計實習3週心得-41123204</title><link href="./2024-w3-blog-tutorial-41123204.html" rel="alternate"></link><published>2024-03-07T00:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>TING</name></author><id>tag:None,2024-03-07:./2024-w3-blog-tutorial-41123204.html</id><summary type="html">&lt;p&gt;2024 協同產品設計實習課程第四週心得.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 協同產品設計實習課程第四週心得.&lt;/p&gt;


&lt;h1&gt;第三週心得&lt;/h1&gt;
&lt;p&gt;使用git submodule add 倉儲連結(http) 411232xx 將組員加入子模組&lt;/p&gt;</content><category term="w3-41123204"></category><category term="網誌編寫-41123204"></category></entry><entry><title>2024 Spring w2 課程 41123219</title><link href="./2024-Spring-w2-blog-tutorial%2041123219.html" rel="alternate"></link><published>2024-02-29T14:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>41123219</name></author><id>tag:None,2024-02-29:./2024-Spring-w2-blog-tutorial 41123219.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;利用 Github Classroom 指定分組倉儲&lt;/h1&gt;
&lt;p&gt;2024 Spring 協同產品設計實習的第二週, 主要利用 Github Classroom 進行分組, 並且說明如何利用 Github Codespaces 維護個人與分組網站.&lt;/p&gt;</content><category term="w2 41123219"></category><category term="網誌編寫 41123219"></category></entry><entry><title>41123216-W2</title><link href="./41123216-w2.html" rel="alternate"></link><published>2024-02-29T13:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>Bee</name></author><id>tag:None,2024-02-29:./41123216-w2.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;組長建立 Team 並設定分組倉儲&lt;/h1&gt;
&lt;p&gt;因其分組倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH.
範例: &lt;a href="https://github.com/mdecd2024/test-ag1"&gt;https://github.com/mdecd2024/test-ag1&lt;/a&gt;&lt;/p&gt;</content><category term="4112316-w2"></category><category term="41123216網誌編寫"></category></entry><entry><title>20240229 41123211</title><link href="./2024-Spring-w2-blog-41123211.html" rel="alternate"></link><published>2024-02-29T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-29:./2024-Spring-w2-blog-41123211.html</id><summary type="html">&lt;p&gt;本周建立團隊分組倉儲。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;本周建立團隊分組倉儲。&lt;/p&gt;


&lt;h1&gt;建立分組倉儲&lt;/h1&gt;
&lt;p&gt;本周以第一周之做法新增名為2b-midbg1之網站，但由於沒有權限，需設置ssh進行授權，並將 .git/config 中的協定改為ssh。&lt;/p&gt;
&lt;p&gt;目前已設置完成，倉儲鏈結 : &lt;a href="https://github.com/mdecd2024/2b-midbg1"&gt;https://github.com/mdecd2024/2b-midbg1&lt;/a&gt;&lt;/p&gt;</content><category term="w2 41123211"></category><category term="網誌編寫 41123211"></category></entry><entry><title>2024 Spring 課程 41123218</title><link href="./2024-Spring-w3-blog-tutorial%2041123218.html" rel="alternate"></link><published>2024-02-29T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>cheng</name></author><id>tag:None,2024-02-29:./2024-Spring-w3-blog-tutorial 41123218.html</id><summary type="html">&lt;p&gt;2024 Spring 第二周網誌撰寫.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第二周網誌撰寫.&lt;/p&gt;


&lt;h1&gt;利用 Github Classroom 指定分組倉儲&lt;/h1&gt;
&lt;h1&gt;分組倉儲&lt;/h1&gt;
&lt;p&gt;:https://github.com/mdecd2024/2b-midbg1&lt;/p&gt;
&lt;h1&gt;組員:&lt;/h1&gt;
&lt;p&gt;41123204 
 41123208
 41123211
 41123216
 41123217
 41123218
 41123219
 41136103&lt;/p&gt;</content><category term="w2 41123218"></category><category term="網誌編寫 41123218"></category></entry><entry><title>2024 協同產品設計實習2週心得-41123204</title><link href="./2024-w2-blog-tutorial-41123204.html" rel="alternate"></link><published>2024-02-29T00:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>TING</name></author><id>tag:None,2024-02-29:./2024-w2-blog-tutorial-41123204.html</id><summary type="html">&lt;p&gt;2024 協同產品設計實習課程第二週心得.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 協同產品設計實習課程第二週心得.&lt;/p&gt;


&lt;h1&gt;第二週心得&lt;/h1&gt;
&lt;p&gt;第二周我們建立了分組網站&lt;/p&gt;</content><category term="w2-41123204"></category><category term="網誌編寫-41123204"></category></entry><entry><title>20240223 41123211</title><link href="./2024-Spring-w1-blog-41123211.html" rel="alternate"></link><published>2024-02-23T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-23:./2024-Spring-w1-blog-41123211.html</id><summary type="html">&lt;p&gt;本周以老師發的倉儲建立個人網站。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;本周以老師發的倉儲建立個人網站。&lt;/p&gt;


&lt;h1&gt;建立個人網站&lt;/h1&gt;
&lt;p&gt;以 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; 作為Template，新增一個名為CD2024的倉儲，並新增Github的雙重驗證等等，與前兩學期之所學類同。&lt;/p&gt;
&lt;p&gt;本學期以"協同"為原則進行，強調組員之間的分工合作，希望本學期順利。&lt;/p&gt;</content><category term="w1 41123211"></category><category term="網誌編寫 41123211"></category></entry><entry><title>41123208-2024 Spring 課程</title><link href="./41123208-2024-Spring-w2-blog-tutorial.html" rel="alternate"></link><published>2024-02-22T15:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>41123208-朱家成</name></author><id>tag:None,2024-02-22:./41123208-2024-Spring-w2-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w2&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學-w2&lt;/p&gt;


&lt;h1&gt;第二周&lt;/h1&gt;
&lt;p&gt;建立各組的分組網站&lt;/p&gt;</content><category term="41123208-w2"></category><category term="41123208-網誌編寫"></category></entry><entry><title>2024 Spring 課程 41123218</title><link href="./2024-Spring-w2-blog-tutorial%2041123218.html" rel="alternate"></link><published>2024-02-22T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>cheng</name></author><id>tag:None,2024-02-22:./2024-Spring-w2-blog-tutorial 41123218.html</id><summary type="html">&lt;p&gt;2024 Spring 第一周網誌撰寫&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第一周網誌撰寫&lt;/p&gt;


&lt;h1&gt;建個人課程倉儲 雙認證&lt;/h1&gt;
&lt;p&gt;倉儲:https://github.com/Cheennggg/cd2024&lt;/p&gt;</content><category term="w1 41123218"></category><category term="網誌編寫 41123218"></category></entry><entry><title>2024 協同產品設計實習1週心得-41123204</title><link href="./2024-w1-blog-tutorial-41123204.html" rel="alternate"></link><published>2024-02-22T00:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>TING</name></author><id>tag:None,2024-02-22:./2024-w1-blog-tutorial-41123204.html</id><summary type="html">&lt;p&gt;2024 協同產品設計實習課程第一週心得.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 協同產品設計實習課程第一週心得.&lt;/p&gt;


&lt;h1&gt;第一週心得&lt;/h1&gt;
&lt;p&gt;第一週我使用了 https://github.com/mdecycu/cmsimde_site 作為template建立自己的&lt;a href="https://github.com/warsplte/cd2024.git"&gt;倉儲&lt;/a&gt;並架設&lt;a href="https://warsplte.github.io/cd2024/"&gt;網頁&lt;/a&gt;
我使用了兩種方式來建立網站&lt;/p&gt;
&lt;h2&gt;Replit&lt;/h2&gt;
&lt;p&gt;將github的倉儲匯入replit 
在Shell分別輸入 
chmod u+x init_replit&lt;/p&gt;
&lt;p&gt;./init_replit&lt;/p&gt;
&lt;p&gt;pip install flask flask_cors bs4 lxml pelican markdown gevent&lt;/p&gt;
&lt;p&gt;接著按下RUN就可編輯個人網頁&lt;/p&gt;
&lt;h2&gt;可攜&lt;/h2&gt;
&lt;p&gt;下載可攜套件，建立putty
開啟start_ipv4.bat 
在cmd輸入
cd tmp&lt;/p&gt;
&lt;p&gt;git clone --recurse-submodules git.個人倉儲&lt;/p&gt;
&lt;p&gt;後輸入
cd cd2024&lt;/p&gt;
&lt;p&gt;cms
即可開啟個人動態網站進行編輯&lt;/p&gt;</content><category term="w1-41123204"></category><category term="網誌編寫-41123204"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w0-blog-.html" rel="alternate"></link><published>2024-02-18T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-18:./2024-Spring-w0-blog-.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w0"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w1-blog-tutorial.html" rel="alternate"></link><published>2024-02-18T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-18:./2024-Spring-w1-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w1"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程 41123218</title><link href="./2024-Spring-w1-blog-tutorial%2041123218.html" rel="alternate"></link><published>2024-02-18T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>cheng</name></author><id>tag:None,2024-02-18:./2024-Spring-w1-blog-tutorial 41123218.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w1 41123218"></category><category term="網誌編寫 41123218"></category></entry><entry><title>41123208-2024 Spring 課程</title><link href="./41123208-2024-Spring-w1-blog-tutorial.html" rel="alternate"></link><published>2024-02-18T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>41123208-kmol</name></author><id>tag:None,2024-02-18:./41123208-2024-Spring-w1-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH.&lt;/p&gt;</content><category term="41123208-w1"></category><category term="41123208-網誌編寫"></category></entry><entry><title>41123216-W1</title><link href="./41123216-w1.html" rel="alternate"></link><published>2024-02-18T11:00:00+08:00</published><updated>2024-05-08T09:27:38+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-18:./41123216-w1.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="41123216-w1"></category><category term="41123216網誌編寫"></category></entry></feed>